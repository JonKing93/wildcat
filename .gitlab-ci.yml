stages:
  - build
  - test
  - deploy

default:
  tags:
    - us-west-2


#####
# Python Versions
#####

# Latest python release
variables:
  LATEST: '13'

# Activates latest python build for non-parallel jobs
.latest-python:
  image: "python:3.$LATEST"
  before_script:
    - source venv-$LATEST/bin/activate

# Run a job on multiple versions of python in parallel
.multiple-python-versions:
  parallel:
    matrix:
      - VERSION: ['11', '12', '13']
  image: "python:3.$VERSION"


#####
# Build
#####

build:
  stage: build
  extends: .multiple-python-versions
  script:
    - pip install virtualenv
    - virtualenv "venv-$VERSION"
    - source "venv-$VERSION/bin/activate"
    - pip install poetry
    - poetry install --with dev --extras tutorials
  artifacts:
    expire_in: 1 hour
    paths:
      - "venv-$VERSION"


#####
# Tests: Safety, Formatting, Tests
#####

safety:
  stage: test
  extends: .latest-python
  script:
    - poe safety

format:
  stage: test
  extends: .latest-python
  script:
    - poe lint

test:
  stage: test
  extends: .multiple-python-versions
  script:
    - source "venv-$VERSION/bin/activate"
    - poe tests
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    expire_in: 1 hour
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

#####
# Deploy: Packaging
#####

pages:
  stage: deploy
  when: manual
  extends: .latest-python
  script:
    - poe docs
  artifacts:
    paths:
    - public
    

release:
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG
  extends: .latest-python
  script:
    - poetry build
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/*
